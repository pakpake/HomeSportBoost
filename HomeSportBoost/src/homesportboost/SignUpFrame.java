/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package homesportboost;

import static homesportboost.HomeSportBoost.map;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author 
 */
public class SignUpFrame extends javax.swing.JFrame {

    /**
     * Creates new form SignUpFrame
     */
    public SignUpFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        goConnexion = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        prenomInscription = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        MDPInscription = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        confirmInscription = new javax.swing.JPasswordField();
        cEstParti = new javax.swing.JButton();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        goConnexion.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N
        goConnexion.setForeground(new java.awt.Color(255, 255, 255));
        goConnexion.setText("J'ai déjà un compte");
        goConnexion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goConnexionMouseClicked(evt);
            }
        });
        jPanel1.add(goConnexion, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 650, 170, -1));

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 21)); // NOI18N
        jLabel3.setText("Pseudo");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 130, -1, -1));

        prenomInscription.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N
        prenomInscription.setForeground(new java.awt.Color(255, 255, 255));
        prenomInscription.setText("Votre pseudo ici");
        prenomInscription.setBorder(null);
        prenomInscription.setOpaque(false);
        prenomInscription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                prenomInscriptionFocusGained(evt);
            }
        });
        prenomInscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenomInscriptionActionPerformed(evt);
            }
        });
        prenomInscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                prenomInscriptionKeyPressed(evt);
            }
        });
        jPanel1.add(prenomInscription, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 202, 310, 50));

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 21)); // NOI18N
        jLabel4.setText("Mot de passe");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 280, -1, -1));

        MDPInscription.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N
        MDPInscription.setForeground(new java.awt.Color(255, 255, 255));
        MDPInscription.setText("jPasswordField1");
        MDPInscription.setBorder(null);
        MDPInscription.setOpaque(false);
        MDPInscription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                MDPInscriptionFocusGained(evt);
            }
        });
        MDPInscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MDPInscriptionActionPerformed(evt);
            }
        });
        MDPInscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MDPInscriptionKeyPressed(evt);
            }
        });
        jPanel1.add(MDPInscription, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 340, 310, 50));

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 21)); // NOI18N
        jLabel5.setText("Confirmation");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 420, -1, -1));

        confirmInscription.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N
        confirmInscription.setForeground(new java.awt.Color(255, 255, 255));
        confirmInscription.setText("jPasswordField1");
        confirmInscription.setBorder(null);
        confirmInscription.setOpaque(false);
        confirmInscription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                confirmInscriptionFocusGained(evt);
            }
        });
        confirmInscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmInscriptionActionPerformed(evt);
            }
        });
        confirmInscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                confirmInscriptionKeyPressed(evt);
            }
        });
        jPanel1.add(confirmInscription, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 470, 300, 50));

        cEstParti.setBackground(new java.awt.Color(0, 102, 102));
        cEstParti.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N
        cEstParti.setForeground(new java.awt.Color(255, 255, 255));
        cEstParti.setText("C'est parti !");
        cEstParti.setBorder(null);
        cEstParti.setOpaque(false);
        cEstParti.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cEstPartiMouseClicked(evt);
            }
        });
        jPanel1.add(cEstParti, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 600, 110, 40));

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homesportboost/fondSignUPBleu.png"))); // NOI18N
        jPanel1.add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void goConnexionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goConnexionMouseClicked
        dispose();
        new LoginFrame().setVisible(true);
    }//GEN-LAST:event_goConnexionMouseClicked

    private void cEstPartiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cEstPartiMouseClicked
        // Quand on clique sur c'est parti quand on veut s'inscrire
        String username = prenomInscription.getText();           // recupere le nom de l'user
        String password0 = MDPInscription.getText();     // recupere le mot de passe
        String password1 = Controller.hashPassword(confirmInscription.getText());     // recupere le mot de passe et creation de son hash direct
        SignUpFrame sp = new SignUpFrame();   // to display error message

        // test si l'username existe deja
        if (Controller.isUserValid(username)) {
            JOptionPane.showMessageDialog(sp,"The username "+username+" is already taken!","ERROR", JOptionPane.ERROR_MESSAGE);
            // } else if (!password0.equals(password1)) {
        } else if (!Controller.matchPassword(password0, password1)) {
            JOptionPane.showMessageDialog(sp,"The 2 passwords are not the same!\n Try again","ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            // on peut ecrire dans le fichier accounts.csv
            File file = new File("src/homesportboost/accounts.csv");
            String filename = file.getAbsolutePath();
            Controller.saveLogin(username, password1, filename);
            // on est connecte, et on redirige directement vers la bonne vue
            JOptionPane.showMessageDialog(null, "You are connected! Welcome!");
            // ouverture de la fenetre accueil
            dispose();
            new Accueil2Frame(username).setVisible(true);
        }
    }//GEN-LAST:event_cEstPartiMouseClicked

    private void prenomInscriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prenomInscriptionKeyPressed
        // Quand on clique sur entrer depuis le username
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) {
            String username = prenomInscription.getText();           // recupere le nom de l'user
            String password0 = MDPInscription.getText();     // recupere le mot de passe
            String password1 = Controller.hashPassword(confirmInscription.getText());     // recupere le mot de passe et creation de son hash direct
            SignUpFrame sp = new SignUpFrame();   // to display error message

            // test si l'username existe deja
            if (Controller.isUserValid(username)) {
                JOptionPane.showMessageDialog(sp,"The username "+username+" is already taken!","ERROR", JOptionPane.ERROR_MESSAGE);
            // } else if (!password0.equals(password1)) {
             } else if (!Controller.matchPassword(password0, password1)) {
                JOptionPane.showMessageDialog(sp,"The 2 passwords are not the same!\n Try again","ERROR", JOptionPane.ERROR_MESSAGE);
             } else {
              // on peut ecrire dans le fichier accounts.csv
                File file = new File("src/homesportboost/accounts.csv");
                String filename = file.getAbsolutePath();
                Controller.saveLogin(username, password1, filename);
                // on est connecte, et on redirige directement vers la bonne vue
                JOptionPane.showMessageDialog(null, "You are connected! Welcome!");
                // ouverture de la fenetre accueil
                dispose();
                new Accueil2Frame(username).setVisible(true);
        }
        }
    }//GEN-LAST:event_prenomInscriptionKeyPressed

    private void MDPInscriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MDPInscriptionKeyPressed
        // Quand on clique sur entrer depuis le mot de passe
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) {
            String username = prenomInscription.getText();           // recupere le nom de l'user
            String password0 = MDPInscription.getText();     // recupere le mot de passe
            String password1 = Controller.hashPassword(confirmInscription.getText());     // recupere le mot de passe et creation de son hash direct
            SignUpFrame sp = new SignUpFrame();   // to display error message

            // test si l'username existe deja
            if (Controller.isUserValid(username)) {
                JOptionPane.showMessageDialog(sp,"The username "+username+" is already taken!","ERROR", JOptionPane.ERROR_MESSAGE);
            // } else if (!password0.equals(password1)) {
             } else if (!Controller.matchPassword(password0, password1)) {
                JOptionPane.showMessageDialog(sp,"The 2 passwords are not the same!\n Try again","ERROR", JOptionPane.ERROR_MESSAGE);
             } else {
              // on peut ecrire dans le fichier accounts.csv
                File file = new File("src/homesportboost/accounts.csv");
                String filename = file.getAbsolutePath();
                Controller.saveLogin(username, password1, filename);
                // on est connecte, et on redirige directement vers la bonne vue
                JOptionPane.showMessageDialog(null, "You are connected! Welcome!");
                // ouverture de la fenetre accueil
                dispose();
                new Accueil2Frame(username).setVisible(true);
        }
        }
    }//GEN-LAST:event_MDPInscriptionKeyPressed

    private void confirmInscriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmInscriptionKeyPressed
        // Quand on clique sur entrer depuis la confirmation
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) {
            String username = prenomInscription.getText();           // recupere le nom de l'user
            String password0 = MDPInscription.getText();     // recupere le mot de passe
            String password1 = Controller.hashPassword(confirmInscription.getText());     // recupere le mot de passe et creation de son hash direct
            SignUpFrame sp = new SignUpFrame();   // to display error message

            // test si l'username existe deja
            if (Controller.isUserValid(username)) {
                JOptionPane.showMessageDialog(sp,"The username "+username+" is already taken!","ERROR", JOptionPane.ERROR_MESSAGE);
            // } else if (!password0.equals(password1)) {
             } else if (!Controller.matchPassword(password0, password1)) {
                JOptionPane.showMessageDialog(sp,"The 2 passwords are not the same!\n Try again","ERROR", JOptionPane.ERROR_MESSAGE);
             } else {
              // on peut ecrire dans le fichier accounts.csv
                File file = new File("src/homesportboost/accounts.csv");
                String filename = file.getAbsolutePath();
                Controller.saveLogin(username, password1, filename);
                // on est connecte, et on redirige directement vers la bonne vue
                JOptionPane.showMessageDialog(null, "You are connected! Welcome!");
                // ouverture de la fenetre accueil
                dispose();
                new Accueil2Frame(username).setVisible(true);
        }
        }
    }//GEN-LAST:event_confirmInscriptionKeyPressed

    private void MDPInscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MDPInscriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MDPInscriptionActionPerformed

    private void confirmInscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmInscriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmInscriptionActionPerformed

    private void prenomInscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenomInscriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prenomInscriptionActionPerformed

    private void prenomInscriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prenomInscriptionFocusGained
        prenomInscription.setText("");
    }//GEN-LAST:event_prenomInscriptionFocusGained

    private void MDPInscriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MDPInscriptionFocusGained
        MDPInscription.setText("");
    }//GEN-LAST:event_MDPInscriptionFocusGained

    private void confirmInscriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmInscriptionFocusGained
        confirmInscription.setText("");
    }//GEN-LAST:event_confirmInscriptionFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField MDPInscription;
    private javax.swing.JButton cEstParti;
    private javax.swing.JPasswordField confirmInscription;
    private javax.swing.JLabel goConnexion;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField prenomInscription;
    // End of variables declaration//GEN-END:variables
}
